// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String    @id @default(uuid())
  projectName String
  owner       String
  progress    Float?
  description String?   // Added for better project details
  priority    String    @default("medium") // low, medium, high
  batches     Batch[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Batch {
  id        String   @id @default(uuid())
  batchName String
  dueDate   DateTime
  slaStatus String   @default("on_track") // on_track, at_risk, overdue
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id                  String   @id @default(uuid())
  taskType            String
  assignedUser        String
  status              String   @default("pending") // pending, in_progress, completed, failed
  accuracy            Float?   // Added for tracking individual task accuracy
  timeSpent           Int?     // Time spent in minutes
  
  templateType        String?  // Type of annotation template (e.g., "product_classification", "image_tagging")
  templateData        Json?    // Product data, images, metadata that needs annotation
  annotationDecision  Json?    // Final annotation decision made by annotator (nullable until completed)
  
  inputs              Json[]   // Legacy: Will be replaced by templateData
  outputs             Json[]   // Legacy: Will be replaced by annotationDecision
  
  batch               Batch    @relation(fields: [batchId], references: [id], onDelete: Cascade)
  batchId             String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  completedAt         DateTime? // Added to track when task was completed
}